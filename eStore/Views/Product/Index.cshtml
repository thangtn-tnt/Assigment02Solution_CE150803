@using System.Globalization;
@using BusinessObject;
@model IEnumerable<BusinessObject.Models.Product>
@{
    ViewData["Title"] = "Product Page";
}

<br />

<form method="get">
    <div class="container p-4">
        <div class="row">
            <div class="col text-right pb-2">
                <a asp-controller="Product" asp-action="Create" class="btn btn-outline-primary"><i class="bi bi-plus-square-fill"></i> Create New Product</a>
            </div>
        </div>
        <div class="row pb-2">
            <div class="col">
                <h1 class="text-primary">Product List</h1>
            </div>
        </div>
    </div>
</form>

<table id="productTable" class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.ProductName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Category.CategoryName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Weight)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitPrice)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UnitsInStock)
            </th>
            <th>Action</th>
        </tr>
    </thead>
</table>

@section Scripts{
    <script type="text/javascript">
        var table;
        const isAdmin = Boolean(@(User.IsInRole(SD.AdminRole) ? 1 : 0));
        reloadTable();

        function reloadTable() {
            table = $('#productTable').DataTable({
                "ajax": {
                    "url": "https://localhost:44357/api/Product/",
                    "type": "GET",
                    "contentType": "application/json",
                    "datatype": "json",
                    "dataSrc": ""
                },
                "columns": [
                    { "data": "productName" },
                    { "data": "category.categoryName" },
                    { "data": "weight" },
                    { "data": "unitPrice" },
                    { "data": "unitsInStock" },
                    {
                        "data": null, render: function (data, type, row) {
                            //if (isAdmin) {
                            var btn = ' <a class="btn btn-success" href="https://localhost:44375/Product/Edit/' + row.productId + '">Edit</a>';
                            btn += ' <button class="btn btn-danger btn-delete" data-id="' + row.productId + '">Delete</button>';
                            //}
                            return btn;
                        }
                    }
                ]
            });
        }

        $('#productTable').on('click', '.btn-delete', function (e) {
            event.preventDefault();
            var id = $(this).data('id');
            console.log(id);
            if (confirm('Bạn có chắc chắn muốn xoá sản phẩm này?')) {
                $.ajax({
                    url: 'https://localhost:44357/api/Product/' + id,
                    type: 'DELETE',
                    success: function (result) {
                        // Xoá hàng khỏi DataTable
                        table.row($(this).parents('tr')).remove().draw();
                        alert('Xoá sản phẩm thành công');
                        table.ajax.reload(); // Reload DataTable after successful delete
                    },
                    error: function (xhr, status, error) {
                        alert('Xoá sản phẩm không thành công');
                    }
                });
            }
        });

    </script>
}